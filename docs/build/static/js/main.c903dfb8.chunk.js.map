{"version":3,"sources":["components/CharacterCard.js","components/CharacterList.js","components/Filters.js","components/DetailCard.js","App.js","index.js"],"names":["CharacterCard","item","this","props","house","react_default","a","createElement","className","src","image","alt","name","houseOrNot","Link","to","concat","id","style","textDecoration","color","Component","CharacterList","_this","filteredList","length","map","key","onClick","characterSelection","components_CharacterCard","filterExist","Filters","type","placeholder","onKeyUp","getNameFilter","DetailCard","characters","match","params","alive","selectedCharacter","yearOfBirth","patronus","isCharacterAlive","isCharacterSelected","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","nameFilter","bind","assertThisInitialized","getSavedCharacters","_this2","fetch","then","res","json","data","newCharacters","index","objectSpread","setState","saveCharacters","dataName","localStorage","setItem","JSON","stringify","getItem","mySavedCharacters","parse","getCharacters","e","query","currentTarget","value","_this$state","filter","toLowerCase","includes","characterID","_this3","Switch","Route","exact","path","render","react","components_Filters","components_CharacterList","components_DetailCard","ReactDOM","HashRouter","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c903dfb8.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass CharacterCard extends Component {\n  houseOrNot(){\n    const {item} =this.props;\n    let house = \"\";\n    if(item.house !== \"\"){\n      house = item.house;\n      return house;  \n    } else{\n      house = \"Do not belong to any house\";\n      return house;\n    }\n  }\n  render() {\n    const {item} =this.props;\n    return (\n        \n          <div className=\"hp__list-card\">\n            <div className=\"list-card-imagebox\">\n              <img src={item.image} alt={item.name} className=\"list__card-image\"></img>\n            </div>\n            <div className=\"list__card-databox\">\n              <h2 className=\"list__card-name\">{item.name}</h2>\n              <p className=\"list__card-house\">{this.houseOrNot()}</p>\n              <div className=\"hp-list-link\">\n                  <Link to={`/character/${item.id}`} style={{textDecoration:\"none\", color:\"inherit\"}}>See more</Link>\n                </div>\n            </div>\n            \n          </div>\n        \n    );\n  }\n}\n\nCharacterCard.propTypes ={\n  item : PropTypes.object.isRequired, \n}\n\nexport default CharacterCard;","import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport CharacterCard from './CharacterCard';\n\nclass CharacterList extends Component {\n\n  filterExist(){\n    const {filteredList} = this.props;\n    if(filteredList.length < 1){\n      return \"No hay datos\"\n    } else{\n      return(\n        filteredList.map(item =>{ \n          return(\n            <li className=\"hp__list-item\" key={item.id} id={item.id} onClick={this.props.characterSelection}>\n              <CharacterCard item={item}/>\n            </li>\n          )\n        })\n      )\n    }\n  }\n  \n  render() {\n    \n    return (\n      <div className=\"hp__container\">\n        <ul className=\"hp__list\">\n          {this.filterExist()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nCharacterList.propTypes ={\n  filteredList : PropTypes.array.isRequired, \n}\n\nexport default CharacterList;","import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\n\nclass Filters extends Component {\n  render() {\n    return (\n      <div className=\"hp__filter\">\n      <input type=\"text\" className=\"hp__filter-input\" placeholder=\"Who are you looking for?\" onKeyUp={this.props.getNameFilter}></input>\n      </div>\n    );\n  }\n}\n\nFilters.propTypes ={\n  getNameFilter : PropTypes.func,\n}\n\nexport default Filters;","import React, {Component} from \"react\";\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass DetailCard extends Component {\n\n  isCharacterAlive(){\n    const {characters} = this.props;\n    const selectedCharacter = this.props.match.params.id;\n    let aliveOrDead = \"\";\n    if(characters[selectedCharacter].alive === true){\n      aliveOrDead = \"ALIVE\"\n      return aliveOrDead;\n    } else {\n      aliveOrDead = \"DEAD\"\n      return aliveOrDead;\n    }\n  }\n\n  isCharacterSelected(){\n    const {characters} = this.props;\n    const selectedCharacter = this.props.match.params.id;\n    if(characters.length < 1){\n      return \"No hay datos\"\n    }else{\n      return(<div className=\"hp__detail-card\">\n      <div className=\"detail__card-imagebox\">\n        <img src={characters[selectedCharacter].image} alt={characters[selectedCharacter].name} className=\"detail__card-image\"></img>\n      </div>\n      <div className=\"detail__card-databox\">\n        <h2 className=\"detail__card-name\">Name: {characters[selectedCharacter].name}</h2>\n        <p className=\"detail__card-house\">House: {characters[selectedCharacter].house}</p>\n        <p className=\"detail__card-born\">Born: {characters[selectedCharacter].yearOfBirth}</p>\n        <p className=\"detail__card-patronus\">Patronus: {characters[selectedCharacter].patronus}</p>\n        <p className=\"detail__card-status\">State: {this.isCharacterAlive()}</p>\n        <div className=\"hp-detail-link\">\n          <Link to=\"/\" style={{textDecoration:\"none\", color:\"inherit\"}}>Go back</Link>\n        </div>\n      </div>\n      \n      </div>)\n    }\n  }\n  \n  render() {\n    return (\n      \n      <div className=\"hp__detail\">\n        {this.isCharacterSelected()}\n      </div>\n      \n    );\n  }\n}\n\nDetailCard.propTypes ={\n  selectedCharacter : PropTypes.string.isRequired,\n  characters: PropTypes.array.isRequired\n}\n\nexport default DetailCard;","import React, { Component, Fragment } from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport './App.scss';\nimport CharacterList from './components/CharacterList';\nimport Filter from './components/Filters';\nimport DetailCard from './components/DetailCard';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      characters : [],\n      nameFilter: \"\",\n      selectedCharacter: \"\"\n    };\n    this.getNameFilter = this.getNameFilter.bind(this);\n    this.characterSelection = this.characterSelection.bind(this);\n    \n  }\n\n  componentDidMount(){\n    this.getSavedCharacters()\n  }\n\n  getCharacters(){\n    const ENDPOINT = 'https://hp-api.herokuapp.com/api/characters';\n    fetch(ENDPOINT)\n      .then(res=>res.json())\n      .then(data =>{\n        const newCharacters = data.map((item, index) =>{\n          return {...item, id: index}\n        })\n        this.setState({\n          characters: newCharacters\n        })\n        this.saveCharacters(newCharacters, 'savedCharacters')\n      })\n  }\n\n  saveCharacters(data, dataName){\n    localStorage.setItem(dataName, JSON.stringify(data));\n  }\n\n  getSavedCharacters(){\n    if(localStorage.getItem('savedCharacters') !==null){\n      const mySavedCharacters = JSON.parse(localStorage.getItem('savedCharacters'));\n      this.setState({\n        characters: mySavedCharacters\n      })\n    } else{\n      this.getCharacters()\n    }\n  }\n\n  getNameFilter(e){\n    const query = e.currentTarget.value;\n    this.setState({\n      nameFilter: query\n    })\n  }\n\n  filteredList(){\n    const {characters, nameFilter} = this.state;\n    return characters.filter(item => item.name.toLowerCase().includes(nameFilter.toLowerCase()))\n  }\n\n  characterSelection(e){\n    let characterID = e.currentTarget.id;\n    this.setState({\n      selectedCharacter : characterID\n    })\n  }\n\n\n  render() {\n  \n    return (\n      <div className=\"app\">\n        <div className=\"hp__page\">\n        <header className=\"hp__header\">\n          <h2 className=\"hp__header-title\">Harry Potter Characters</h2>\n        </header>\n        <main className=\"hp__main\">\n          <Switch>\n            <Route exact path=\"/\" render={()=>(\n              <Fragment>\n                <Filter getNameFilter={this.getNameFilter}/>\n                <CharacterList characterSelection={this.characterSelection} filteredList={this.filteredList()}/>\n              </Fragment>\n            )}/>\n            <Route path=\"/character/:id\" render={(props) => \n              <DetailCard match={props.match} selectedCharacter={this.state.selectedCharacter} characters={this.state.characters}></DetailCard>}\n            />\n          </Switch>\n\n        </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n"],"sourceRoot":""}